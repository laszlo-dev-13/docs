{
  "openapi": "3.0.1",
  "info": {
    "title": "TC Api",
    "description": "A sample API that uses a plant store as an example to demonstrate features in the OpenAPI specification",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://454c-82-78-22-111.ngrok-free.app/api"
    }
  ],
  "security": [
    {
      "apiKeyAuth": []
    }
  ],
  "paths": {
    "/me": {
      "get": {
        "description": "Returns the info about the team that owns the api_key",
        "responses": {
          "200": {
            "description": "Me response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MeResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadReqResponse"
          },
          "401": {
            "description": "Unauthorized error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedError"
                }
              }
            }
          }
        }
      }
    },
    "/campaigns": {
      "get": {
        "description": "Retrieves a paginated list of campaigns belonging to the team identified by the provided API key. The response includes campaign details and pagination information.",
        "parameters": [
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of items per page (1-100).",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            }
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "Token to fetch the next page of results, if available.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Campaigns listing response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignPaginationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    { "$ref": "#/components/schemas/BadRequestError"}
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedError"
                }
              }
            }
          }
        }
      }
    },
    "/campaigns/{id}": {
      "get": {
        "description": "Retrieves details of a specific campaign identified by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the campaign to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Campaign details response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    { "$ref": "#/components/schemas/BadRequestError"}
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedError"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    { "$ref": "#/components/schemas/NotFoundError"}
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/sessions": {
      "get": {
        "description": "Retrieves a paginated list of sessions.",
        "parameters": [
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of sessions per page (1-100).",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            }
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "Token to load the next page of sessions.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sessions listing response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionListingResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    { "$ref": "#/components/schemas/BadRequestError"}
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedError"
                }
              }
            }
          }
        }
      }
    },
    "/sessions/{id}": {
      "get": {
        "description": "Retrieves details of a session by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the session to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Session details response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionDetailsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    { "$ref": "#/components/schemas/BadRequestError"}
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedError"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    { "$ref": "#/components/schemas/NotFoundError"}
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "MeResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["success", "error"],
            "example": "success"
          },
          "data": {
            "type": "object",
            "properties": {
              "team": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "owner": {
                    "type": "object",
                    "properties": {
                      "first_name": {
                        "type": "string"
                      },
                      "last_name": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "CampaignPaginationResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["success"],
            "example": "success",
            "description": "Status of the response."
          },
          "data": {
            "type": "object",
            "properties": {
              "items": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "id of the campaign"
                    },
                    "api_key": {
                      "type": "string",
                      "description": "api_key of the campaign"
                    },
                    "name": {
                      "type": "string",
                      "description": "name of the campaign"
                    },
                    "created_at": {
                      "type": "number",
                      "description": "timestamp representation of when the campaign was created",
                      "example": 1718104009000
                    }
                  }
                },
                "description": "List of campaign snippets"
              },
              "pagination": {
                "type": "object",
                "properties": {
                  "has_next_page": {
                    "type": "boolean",
                    "description": "Indicates whether there are more pages available after the current page."
                  },
                  "next_page_token": {
                    "type": "string",
                    "description": "Token to fetch the next page of results, if available."
                  }
                },
                "description": "Pagination information"
              }
            }
          }
        }
      },
      "CampaignResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["success"],
            "example": "success"
          },
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "id of the campaign"
              },
              "api_key": {
                "type": "string",
                "description": "api_key associated with the campaign"
              },
              "name": {
                "type": "string",
                "description": "name of the campaign"
              },
              "created_at": {
                "type": "integer",
                "format": "int64",
                "description": "timestamp representation of when the campaign was created"
              },
              "sources_config": {
                "type": "object",
                "description": "allow / block sources configuration of the campaign",
                "properties": {
                  "allow": {
                    "type": "array",
                    "nullable": true,
                    "description": "list all the allowed sources this campaign allows (if applicable)",
                    "items": {
                      "type": "string"
                    }
                  },
                  "block": {
                    "type": "array",
                    "nullable": true,
                    "description": "list all the blocked sources this campaign allows (if applicable)",
                    "items": {
                      "type": "string"
                    }
                  },
                  "allow_all": {
                    "type": "boolean",
                    "description": "true = allow any source",
                    "nullable": true
                  }
                }
              }
            }
          }
        }
      },
      "SessionListingResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["success"]
          },
          "data": {
            "type": "object",
            "properties": {
              "items": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SessionItem"
                }
              },
              "pagination": {
                "type": "object",
                "properties": {
                  "has_next_page": {
                    "type": "boolean"
                  },
                  "next_page_token": {
                    "type": "string",
                    "description": "Token to fetch the next page of results, if available."
                  }
                }
              }
            }
          }
        }
      },
      "SessionItem": {
        "type": "object",
        "properties": {
          "tc_id": {
            "type": "string"
          },
          "created_at": {
            "type": "integer",
            "format": "int64"
          },
          "source_url": {
            "type": "string"
          },
          "generator_id": {
            "type": "string"
          }
        }
      },
      "SessionDetailsResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["success"]
          },
          "data": {
            "type": "object",
            "properties": {
              "tc_id": {
                "type": "string"
              },
              "created_at": {
                "type": "integer",
                "format": "int64"
              },
              "source_url": {
                "type": "string"
              },
              "generator_id": {
                "type": "string"
              },
              "details": {
                "type": "object",
                "properties": {
                  "ip_v4": {
                    "type": "string"
                  },
                  "ip_v6": {
                    "type": "string"
                  },
                  "ip_data": {
                    "type": "object",
                    "properties": {
                      "v6": {
                        "type": "object"
                      },
                      "v4": {
                        "type": "object",
                        "properties": {
                          "country": {
                            "type": "string"
                          },
                          "flag": {
                            "type": "string"
                          },
                          "city": {
                            "type": "string"
                          },
                          "ip": {
                            "type": "string"
                          },
                          "is_datacenter": {
                            "type": "boolean"
                          },
                          "is_tor": {
                            "type": "boolean"
                          },
                          "autonomous_system_organization": {
                            "type": "string"
                          },
                          "autonomous_system_number": {
                            "type": "integer"
                          },
                          "is_vpn": {
                            "type": "boolean"
                          },
                          "is_in_european_union": {
                            "type": "boolean"
                          },
                          "is_bot": {
                            "type": "boolean"
                          },
                          "iso_code": {
                            "type": "string"
                          },
                          "is_proxy": {
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  },
                  "device_model": {
                    "type": "string"
                  },
                  "device_vendor": {
                    "type": "string"
                  },
                  "user_agent": {
                    "type": "string"
                  },
                  "os_name": {
                    "type": "string"
                  },
                  "os_version": {
                    "type": "string"
                  },
                  "browser_name": {
                    "type": "string"
                  },
                  "browser_version": {
                    "type": "string"
                  },
                  "timezone": {
                    "type": "integer"
                  },
                  "adblock": {
                    "type": "boolean"
                  },
                  "do_not_track": {
                    "type": "boolean"
                  },
                  "fingerprint_hash": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "BadRequestError": {
        "required": [
          "error",
          "message"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["error"],
            "example": "error"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "NotFoundError": {
        "required": [
          "error",
          "message"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["error"],
            "example": "error"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "UnauthorizedError": {
        "required": [
          "error",
          "message"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["error"],
            "example": "error"
          },
          "message": {
            "type": "string"
          }
        }
      }
    },
    "responses": {
      "BadReqResponse": {
        "description": "Bad request exception",
        "content": {
          "application/json": {
            "schema": {
              "required": [
                "error",
                "message"
              ],
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": ["error"],
                  "example": "error"
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "ApiKey"
      },
      "apiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization",
        "description": "Use 'ApiKey <api_key>' format for the Authorization header"
      }
    }
  }
}